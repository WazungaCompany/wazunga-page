{"version":3,"sources":["serviceWorker.js","components/NavbarItemsList.js","components/NavbarLogo.js","components/Navbar.js","components/Lorem.js","pages/Home.js","index.js"],"names":["Boolean","window","location","hostname","match","NavbarItemsList","buttons","className","style","map","button","i","marginBottom","href","ref","key","name","NavbarLogo","logo","alt","src","Navbar","marginInlineStart","id","type","for","preserveAspectRatio","viewBox","d","Lorem","Home","Fragment","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6OAYoBA,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2D,SCHOC,EAZS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACpB,wBAAIC,UAAU,gBAAgBC,MAAO,CAAE,aAAc,SAChDF,EAAQG,KAAI,SAACC,EAAQC,GAClB,OACI,wBAAIJ,UAAU,YAAYC,MAAO,CAAEI,aAAc,SAC7C,uBAAGC,KAAMH,EAAOI,IAAKC,IAAKJ,EAAGJ,UAAU,kBAAkBG,EAAOM,YCErEC,EARI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,yBAAKX,UAAU,0BACX,yBAAKY,IAAI,gBACLC,IAAKF,EACLX,UAAU,qBCgCPc,EAjCA,WAYX,OACI,yBAAKd,UAAU,cACX,yBAAKA,UAAU,gBACX,2BAAOC,MAAO,CAAEc,kBAAmB,QAAUC,GAAG,eAAeC,KAAK,WAAWjB,UAAU,iBACzF,2BAAOkB,IAAI,eAAelB,UAAU,uCAChC,yBAAKmB,oBAAoB,WAAWC,QAAQ,aACxC,0BAAMC,EAAE,oDAEZ,yBAAKF,oBAAoB,WAAWC,QAAQ,aACxC,0BACIC,EAAE,oHAId,kBAAC,EAAD,CAAiBtB,QAxBX,CACd,CAAEU,KAAM,OAAQF,IAAK,MACrB,CAAEE,KAAM,QAASF,IAAK,MACtB,CAAEE,KAAM,UAAWF,IAAK,MACxB,CAAEE,KAAM,SAAUF,IAAK,MACvB,CAAEE,KAAM,UAAWF,IAAK,UAqBrB,kBAAC,EAAD,CAAYI,KAjBP,yJC+CDW,G,MA5DD,kBACV,yBAAKtB,UAAU,YAAYC,MAAO,CAAC,WAAc,UACzC,uBAAGA,MAAO,CAAE,SAAY,SAAxB,whBAWA,uBAAGA,MAAO,CAAE,SAAY,SAAxB,ivBAcA,uBAAGA,MAAO,CAAE,SAAY,SAAxB,yzBAeA,uBAAGA,MAAO,CAAE,SAAY,SAAxB,q2BClCGsB,EAPF,kBACT,kBAAC,IAAMC,SAAP,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,QCARC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,SN2HlB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAAAC,GACFA,EAAaC,gBAEhBC,OAAM,SAAAC,GACHC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.20cc01a1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n            headers: { 'Service-Worker': 'script' },\n        })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}","import React from 'react';\nimport './Navbar.css';\n\nconst NavbarItemsList = ({ buttons }) => (\n    <ol className=\"menu__content\" style={{ \"margin-top\": \"20px\" }}>\n        {buttons.map((button, i) => {\n            return (\n                <li className=\"menu-item\" style={{ marginBottom: \"30px\" }}>\n                    <a href={button.ref} key={i} className=\"button__nhulox\">{button.name}</a>\n                </li>\n            )\n        })}\n    </ol>\n);\n\nexport default NavbarItemsList;","import React from 'react';\n\nconst NavbarLogo = ({ logo }) => (\n    <div className=\"nav__custom__logo__box\" >\n        <img alt=\"Wazunga brand\"\n            src={logo}\n            className=\"wazunga__brand\" />\n    </div>\n);\n\nexport default NavbarLogo;","import React from 'react';\nimport NavbarItemsList from './NavbarItemsList';\nimport './Navbar.css';\nimport NavbarLogo from './NavbarLogo';\n\nconst Navbar = () => {\n\n    let buttonsData = [\n        { name: 'Home', ref: '#0' },\n        { name: 'About', ref: '#0' },\n        { name: 'Widgets', ref: '#0' },\n        { name: 'Kabobs', ref: '#0' },\n        { name: 'Contact', ref: '#0' },\n    ]\n\n    //let brand = 'https://firebasestorage.googleapis.com/v0/b/wazunga-briefcase.appspot.com/o/wazunga_brand2.png?alt=media&token=08a28931-ddaf-4247-a965-6caa855c37e1'\n    let brand = 'https://firebasestorage.googleapis.com/v0/b/wazunga-briefcase.appspot.com/o/wazunga_brand.png?alt=media&token=ecc0df7a-16fd-4778-aa64-b4716df0c088'\n    return (\n        <div className=\"nav-custom\">\n            <div className=\"menu__custom\">\n                <input style={{ marginInlineStart: \"50px\" }} id=\"menu__toggle\" type=\"checkbox\" className=\"menu__toggle\" />\n                <label for=\"menu__toggle\" className=\"menu__toggle-label menu-custom-icon\">\n                    <svg preserveAspectRatio=\"xMinYMin\" viewBox=\"0 0 24 24\">\n                        <path d=\"M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z\" />\n                    </svg>\n                    <svg preserveAspectRatio=\"xMinYMin\" viewBox=\"0 0 24 24\">\n                        <path\n                            d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\"\n                        />\n                    </svg>\n                </label>\n                <NavbarItemsList buttons={buttonsData} />\n            </div>\n           <NavbarLogo logo={brand}/>\n        </div>\n    );\n}\n\nexport default Navbar;","import React from 'react';\nimport 'bulma/css/bulma.min.css';\n\nconst Lorem = () => (\n    <div className=\"container\" style={{\"paddingTop\": \"100px\"}}>\n            <p style={{ \"fontSize\": \"30pt\" }}>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam venenatis\n                ipsum at lectus varius, quis tincidunt leo molestie. Suspendisse\n                sollicitudin odio ipsum, a commodo sem commodo sit amet. Ut varius\n                sapien in justo efficitur, nec volutpat eros hendrerit. Curabitur\n                dapibus iaculis orci, eget gravida metus feugiat at. Phasellus ac ex\n                neque. Aliquam vel viverra orci, non eleifend elit. Quisque tincidunt\n                convallis placerat. Suspendisse potenti. Etiam ac ante id leo pulvinar\n                gravida. Morbi aliquet turpis ut tristique efficitur.\n      </p>\n\n            <p style={{ \"fontSize\": \"30pt\" }}>\n                In sed nisl sem. Suspendisse et mauris et elit porttitor efficitur.\n                Donec sed nisl ut metus efficitur condimentum in eu purus. Phasellus\n                congue sem erat, vehicula aliquam neque auctor ut. Morbi non leo sit\n                amet est consequat euismod. Praesent accumsan, est id blandit efficitur,\n                sem urna lobortis erat, molestie consectetur nunc orci eu metus. Nulla\n                facilisi. Cras at dapibus nisl, sit amet pulvinar enim. Sed rutrum\n                interdum risus, at vulputate velit tristique sed. Ut consequat\n                scelerisque ornare. Aenean in sapien varius, cursus enim sed, sagittis\n                ipsum. Phasellus suscipit lacinia orci, ac sodales arcu. Aenean ac neque\n                non libero aliquam convallis. Nulla in magna sapien. Vestibulum mauris\n                turpis, tincidunt a tellus in, feugiat tincidunt nibh.\n      </p>\n\n            <p style={{ \"fontSize\": \"30pt\" }}>\n                Maecenas vulputate urna massa, eleifend pulvinar risus laoreet ac. In\n                venenatis pharetra velit, vel rutrum orci tempus quis. Sed feugiat\n                finibus urna, vitae iaculis sem fringilla vitae. Suspendisse in tellus\n                eu arcu imperdiet interdum nec sed elit. Orci varius natoque penatibus\n                et magnis dis parturient montes, nascetur ridiculus mus. Nulla laoreet\n                purus eget eros faucibus efficitur. Nam sit amet congue mauris. In hac\n                habitasse platea dictumst. Suspendisse pretium aliquam risus sed\n                maximus. Nam vitae enim sodales ligula dignissim convallis. Proin\n                venenatis est sed neque lobortis, in tincidunt risus condimentum. Sed\n                tristique ornare magna quis dapibus. Curabitur ac ante blandit,\n                fermentum elit eget, posuere ligula. Phasellus at lectus porta, placerat\n                erat nec, luctus ligula. Sed tristique lorem at porta gravida.\n      </p>\n\n            <p style={{ \"fontSize\": \"30pt\" }}>\n                Nam ligula mauris, iaculis vel orci eget, vulputate hendrerit dolor.\n                Maecenas a fermentum nisl. Praesent non scelerisque turpis. Maecenas non\n                hendrerit elit, nec blandit nulla. Aliquam maximus ipsum et neque\n                consequat, vel blandit lorem egestas. Nam vitae feugiat nunc. Proin id\n                nulla ultricies, porta nisi ut, mollis nulla. Quisque in arcu in augue\n                imperdiet dictum id ut odio. Morbi dolor risus, tincidunt vitae sem sit\n                amet, interdum pulvinar justo. Integer ut arcu eget quam ornare placerat\n                at sed nunc. Nullam fringilla, diam sed hendrerit vestibulum, risus\n                nulla consequat magna, vel ultricies dui sem eu ex. Phasellus elementum\n                eget augue vel dictum. Fusce lacus sem, imperdiet tristique pulvinar\n                vitae, tincidunt in libero. Donec tempus vestibulum est sit amet cursus.\n                Proin porttitor venenatis lacus id pretium. Quisque non eros ut urna\n                maximus rhoncus.\n      </p>\n        </div>\n)\n\nexport default Lorem;","import React from 'react';\nimport Navbar from '../components/Navbar';\nimport Lorem from '../components/Lorem';\n\nconst Home = () => (\n    <React.Fragment>\n        <Navbar />\n        <Lorem />\n    </React.Fragment>\n)\n\nexport default Home;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport Home from './pages/Home';\n\nReactDOM.render(\n  <Home />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}